; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --debug -c --asm --interleave -o.\obj\system_m480.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\system_m480.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I..\..\..\..\Library\CMSIS\Include -I..\..\..\..\Library\StdDriver\inc -I..\..\..\..\Library\Device\Nuvoton\M480\Include -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=526 -DDEBUG_ENABLE_SEMIHOST --omf_browse=.\obj\system_m480.crf ..\..\..\..\Library\Device\Nuvoton\M480\Source\system_M480.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  SystemCoreClockUpdate PROC
;;;27      *----------------------------------------------------------------------------*/
;;;28     void SystemCoreClockUpdate (void)            /* Get Core Clock Frequency      */
000000  b570              PUSH     {r4-r6,lr}
;;;29     {
;;;30         uint32_t u32Freq, u32ClkSrc;
;;;31         uint32_t u32HclkDiv;
;;;32     
;;;33         /* Update PLL Clock */
;;;34         PllClock = CLK_GetPLLClockFreq();
000002  f7fffffe          BL       CLK_GetPLLClockFreq
000006  4932              LDR      r1,|L1.208|
000008  6008              STR      r0,[r1,#0]  ; PllClock
;;;35     
;;;36         u32ClkSrc = CLK->CLKSEL0 & CLK_CLKSEL0_HCLKSEL_Msk;
00000a  4832              LDR      r0,|L1.212|
00000c  6800              LDR      r0,[r0,#0]
00000e  f0000507          AND      r5,r0,#7
;;;37     
;;;38         if(u32ClkSrc == CLK_CLKSEL0_HCLKSEL_PLL)
000012  2d02              CMP      r5,#2
000014  d102              BNE      |L1.28|
;;;39         {
;;;40             /* Use PLL clock */
;;;41             u32Freq = PllClock;
000016  4608              MOV      r0,r1
000018  6804              LDR      r4,[r0,#0]  ; PllClock
00001a  e002              B        |L1.34|
                  |L1.28|
;;;42         }
;;;43         else
;;;44         {
;;;45             /* Use the clock sources directly */
;;;46             u32Freq = gau32ClkSrcTbl[u32ClkSrc];
00001c  482e              LDR      r0,|L1.216|
00001e  f8504025          LDR      r4,[r0,r5,LSL #2]
                  |L1.34|
;;;47         }
;;;48     
;;;49         u32HclkDiv = (CLK->CLKDIV0 & CLK_CLKDIV0_HCLKDIV_Msk) + 1UL;
000022  482c              LDR      r0,|L1.212|
000024  3010              ADDS     r0,r0,#0x10
000026  6800              LDR      r0,[r0,#0]
000028  f000000f          AND      r0,r0,#0xf
00002c  1c46              ADDS     r6,r0,#1
;;;50     
;;;51         /* Update System Core Clock */
;;;52         SystemCoreClock = u32Freq / u32HclkDiv;
00002e  fbb4f0f6          UDIV     r0,r4,r6
000032  492a              LDR      r1,|L1.220|
000034  6008              STR      r0,[r1,#0]  ; SystemCoreClock
;;;53     
;;;54     
;;;55         //if(SystemCoreClock == 0)
;;;56         //    __BKPT(0);
;;;57     
;;;58         CyclesPerUs = (SystemCoreClock + 500000UL) / 1000000UL;
000036  4608              MOV      r0,r1
000038  6800              LDR      r0,[r0,#0]  ; SystemCoreClock
00003a  4929              LDR      r1,|L1.224|
00003c  4408              ADD      r0,r0,r1
00003e  0049              LSLS     r1,r1,#1
000040  fbb0f0f1          UDIV     r0,r0,r1
000044  4927              LDR      r1,|L1.228|
000046  6008              STR      r0,[r1,#0]  ; CyclesPerUs
;;;59     }
000048  bd70              POP      {r4-r6,pc}
;;;60     
                          ENDP

                  SystemInit PROC
;;;80      */
;;;81     void SystemInit (void)
00004a  4827              LDR      r0,|L1.232|
;;;82     {
;;;83         /* Add your system initialize code here.
;;;84            Do not use global variables because this function is called before
;;;85            reaching pre-main. RW section maybe overwritten afterwards.          */
;;;86     
;;;87     
;;;88         /* FPU settings ------------------------------------------------------------*/
;;;89     #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
;;;90         SCB->CPACR |= ((3UL << 10*2) |                 /* set CP10 Full Access */
00004c  6800              LDR      r0,[r0,#0]
00004e  f4400070          ORR      r0,r0,#0xf00000
000052  4925              LDR      r1,|L1.232|
000054  6008              STR      r0,[r1,#0]
;;;91                        (3UL << 11*2)  );               /* set CP11 Full Access */
;;;92     #endif
;;;93     
;;;94         /* Set access cycle for CPU @ 192MHz */
;;;95         FMC->CYCCTL = (FMC->CYCCTL & ~FMC_CYCCTL_CYCLE_Msk) | (8 << FMC_CYCCTL_CYCLE_Pos);
000056  4825              LDR      r0,|L1.236|
000058  6cc0              LDR      r0,[r0,#0x4c]
00005a  f020000f          BIC      r0,r0,#0xf
00005e  f0400008          ORR      r0,r0,#8
000062  4922              LDR      r1,|L1.236|
000064  64c8              STR      r0,[r1,#0x4c]
;;;96         /* Configure power down bias, must set 1 before entering power down mode.
;;;97            So set it at the very beginning */
;;;98         CLK->LDOCTL |= CLK_LDOCTL_PDBIASEN_Msk;
000066  481b              LDR      r0,|L1.212|
000068  3088              ADDS     r0,r0,#0x88
00006a  6800              LDR      r0,[r0,#0]
00006c  f4402080          ORR      r0,r0,#0x40000
000070  f04f4180          MOV      r1,#0x40000000
000074  f8c10298          STR      r0,[r1,#0x298]
;;;99         /* Hand over the control of PF.4~11 I/O function from RTC module to GPIO module */
;;;100        CLK->APBCLK0 |= CLK_APBCLK0_RTCCKEN_Msk;
000078  4608              MOV      r0,r1
00007a  f8d00208          LDR      r0,[r0,#0x208]
00007e  f0400002          ORR      r0,r0,#2
000082  f8c10208          STR      r0,[r1,#0x208]
;;;101        RTC->GPIOCTL0 &= ~(RTC_GPIOCTL0_CTLSEL0_Msk | RTC_GPIOCTL0_CTLSEL1_Msk |
000086  481a              LDR      r0,|L1.240|
000088  f8d00104          LDR      r0,[r0,#0x104]
00008c  f00030f7          AND      r0,r0,#0xf7f7f7f7
000090  4917              LDR      r1,|L1.240|
000092  f8c10104          STR      r0,[r1,#0x104]
;;;102                           RTC_GPIOCTL0_CTLSEL2_Msk | RTC_GPIOCTL0_CTLSEL3_Msk);
;;;103        RTC->GPIOCTL1 &= ~(RTC_GPIOCTL1_CTLSEL4_Msk | RTC_GPIOCTL1_CTLSEL5_Msk |
000096  4608              MOV      r0,r1
000098  f8d00108          LDR      r0,[r0,#0x108]
00009c  f00030f7          AND      r0,r0,#0xf7f7f7f7
0000a0  f8c10108          STR      r0,[r1,#0x108]
;;;104                           RTC_GPIOCTL1_CTLSEL6_Msk | RTC_GPIOCTL1_CTLSEL7_Msk);
;;;105        CLK->APBCLK0 &= ~CLK_APBCLK0_RTCCKEN_Msk;
0000a4  0488              LSLS     r0,r1,#18
0000a6  f8d00208          LDR      r0,[r0,#0x208]
0000aa  f0200002          BIC      r0,r0,#2
0000ae  4909              LDR      r1,|L1.212|
0000b0  3908              SUBS     r1,r1,#8
0000b2  6008              STR      r0,[r1,#0]
;;;106        HXTInit();
0000b4  bf00              NOP      
0000b6  f04f2040          MOV      r0,#0x40004000
0000ba  f8d00140          LDR      r0,[r0,#0x140]
0000be  f02000f0          BIC      r0,r0,#0xf0
0000c2  f04f2140          MOV      r1,#0x40004000
0000c6  f8c10140          STR      r0,[r1,#0x140]
0000ca  bf00              NOP      
;;;107    
;;;108    }
0000cc  4770              BX       lr
;;;109    /*** (C) COPYRIGHT 2016 Nuvoton Technology Corp. ***/
                          ENDP

0000ce  0000              DCW      0x0000
                  |L1.208|
                          DCD      PllClock
                  |L1.212|
                          DCD      0x40000210
                  |L1.216|
                          DCD      gau32ClkSrcTbl
                  |L1.220|
                          DCD      SystemCoreClock
                  |L1.224|
                          DCD      0x0007a120
                  |L1.228|
                          DCD      CyclesPerUs
                  |L1.232|
                          DCD      0xe000ed88
                  |L1.236|
                          DCD      0x4000c000
                  |L1.240|
                          DCD      0x40041000

                          AREA ||.data||, DATA, ALIGN=2

                  SystemCoreClock
                          DCD      0x00b71b00
                  CyclesPerUs
                          DCD      0x0000000c
                  PllClock
                          DCD      0x00b71b00
                  gau32ClkSrcTbl
                          DCD      0x00b71b00
                          DCD      0x00008000
                          DCD      0x00000000
                          DCD      0x00002710
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00b71b00

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\..\\Library\\Device\\Nuvoton\\M480\\Source\\system_M480.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___13_system_M480_c_5d646a67____REV16|
#line 388 "..\\..\\..\\..\\Library\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___13_system_M480_c_5d646a67____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___13_system_M480_c_5d646a67____REVSH|
#line 402
|__asm___13_system_M480_c_5d646a67____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___13_system_M480_c_5d646a67____RRX|
#line 587
|__asm___13_system_M480_c_5d646a67____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
