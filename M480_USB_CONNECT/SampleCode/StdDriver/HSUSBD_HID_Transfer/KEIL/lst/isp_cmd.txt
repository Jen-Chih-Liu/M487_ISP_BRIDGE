; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --debug -c --asm --interleave -o.\obj\isp_cmd.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\isp_cmd.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I..\..\..\..\Library\CMSIS\Include -I..\..\..\..\Library\StdDriver\inc -I..\..\..\..\Library\Device\Nuvoton\M480\Include -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=526 -DDEBUG_ENABLE_SEMIHOST --omf_browse=.\obj\isp_cmd.crf ..\ISP_CMD.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_x
                          REQUIRE _printf_longlong_hex
                  CLK_SysTickDelay PROC
;;;512      */
;;;513    __STATIC_INLINE void CLK_SysTickDelay(uint32_t us)
000000  49fe              LDR      r1,|L1.1020|
;;;514    {
;;;515        SysTick->LOAD = us * CyclesPerUs;
000002  6809              LDR      r1,[r1,#0]  ; CyclesPerUs
000004  4341              MULS     r1,r0,r1
000006  f04f22e0          MOV      r2,#0xe000e000
00000a  6151              STR      r1,[r2,#0x14]
;;;516        SysTick->VAL  = 0x0UL;
00000c  2100              MOVS     r1,#0
00000e  6191              STR      r1,[r2,#0x18]
;;;517        SysTick->CTRL = SysTick_CTRL_CLKSOURCE_Msk | SysTick_CTRL_ENABLE_Msk;
000010  2105              MOVS     r1,#5
000012  6111              STR      r1,[r2,#0x10]
;;;518    
;;;519        /* Waiting for down-count to zero */
;;;520        while((SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk) == 0UL)
000014  bf00              NOP      
                  |L1.22|
000016  f04f21e0          MOV      r1,#0xe000e000
00001a  6909              LDR      r1,[r1,#0x10]
00001c  f4013180          AND      r1,r1,#0x10000
000020  2900              CMP      r1,#0
000022  d0f8              BEQ      |L1.22|
;;;521        {
;;;522        }
;;;523    
;;;524        /* Disable SysTick counter */
;;;525        SysTick->CTRL = 0UL;
000024  2100              MOVS     r1,#0
000026  f04f22e0          MOV      r2,#0xe000e000
00002a  6111              STR      r1,[r2,#0x10]
;;;526    }
00002c  4770              BX       lr
;;;527    
                          ENDP

                  WordsCpy PROC
;;;19     extern io_handle_t  DEV_handle;
;;;20     void WordsCpy(void *dest, void *src, int32_t size)
00002e  b570              PUSH     {r4-r6,lr}
;;;21     {
000030  4603              MOV      r3,r0
;;;22     	uint8_t *pu8Src, *pu8Dest;
;;;23     	int32_t i;
;;;24     
;;;25     	pu8Dest = (uint8_t *)dest;
000032  461c              MOV      r4,r3
;;;26     	pu8Src = (uint8_t *)src;
000034  460d              MOV      r5,r1
;;;27     
;;;28     	for (i = 0; i < size; i++)
000036  2000              MOVS     r0,#0
000038  e002              B        |L1.64|
                  |L1.58|
;;;29     		pu8Dest[i] = pu8Src[i];
00003a  5c2e              LDRB     r6,[r5,r0]
00003c  5426              STRB     r6,[r4,r0]
00003e  1c40              ADDS     r0,r0,#1              ;28
                  |L1.64|
000040  4290              CMP      r0,r2                 ;28
000042  dbfa              BLT      |L1.58|
;;;30     }
000044  bd70              POP      {r4-r6,pc}
;;;31     
                          ENDP

                  Checksum PROC
;;;32     uint16_t Checksum(unsigned char *buf, int len)
000046  b510              PUSH     {r4,lr}
;;;33     {
000048  4602              MOV      r2,r0
00004a  460b              MOV      r3,r1
;;;34     	int i;
;;;35     	uint16_t c;
;;;36     
;;;37     	for (c = 0, i = 0; i < len; i++) {
00004c  2000              MOVS     r0,#0
00004e  2100              MOVS     r1,#0
000050  e003              B        |L1.90|
                  |L1.82|
;;;38     		c += buf[i];
000052  5c54              LDRB     r4,[r2,r1]
000054  4404              ADD      r4,r4,r0
000056  b2a0              UXTH     r0,r4
000058  1c49              ADDS     r1,r1,#1              ;37
                  |L1.90|
00005a  4299              CMP      r1,r3                 ;37
00005c  dbf9              BLT      |L1.82|
;;;39     	}
;;;40     	return (c);
;;;41     }
00005e  bd10              POP      {r4,pc}
;;;42     
                          ENDP

                  SendData PROC
;;;43     
;;;44     void SendData(void)
000060  b508              PUSH     {r3,lr}
;;;45     {
;;;46     	uint32_t len = 64;
000062  2040              MOVS     r0,#0x40
000064  9000              STR      r0,[sp,#0]
;;;47     	gcksum = Checksum(sendbuf, PACKET_SIZE);
000066  2140              MOVS     r1,#0x40
000068  48e5              LDR      r0,|L1.1024|
00006a  f7fffffe          BL       Checksum
00006e  49e5              LDR      r1,|L1.1028|
000070  8008              STRH     r0,[r1,#0]
;;;48     	
;;;49         io_write(DEV_handle, sendbuf, &len); 	 
000072  466a              MOV      r2,sp
000074  49e2              LDR      r1,|L1.1024|
000076  48e4              LDR      r0,|L1.1032|
000078  6800              LDR      r0,[r0,#0]  ; DEV_handle
00007a  f7fffffe          BL       io_write
;;;50     }
00007e  bd08              POP      {r3,pc}
;;;51     
                          ENDP

                  RcvData PROC
;;;52     ErrNo RcvData(void)
000080  b57c              PUSH     {r2-r6,lr}
;;;53     {
;;;54     	ErrNo Result;
;;;55     	unsigned short lcksum;
;;;56     	uint8_t *pBuf;
;;;57     	uint32_t len = 64;
000082  2040              MOVS     r0,#0x40
000084  9000              STR      r0,[sp,#0]
;;;58       Result=io_read(DEV_handle, rcvbuf, &len);
000086  466a              MOV      r2,sp
000088  49e0              LDR      r1,|L1.1036|
00008a  48df              LDR      r0,|L1.1032|
00008c  6800              LDR      r0,[r0,#0]  ; DEV_handle
00008e  f7fffffe          BL       io_read
000092  4605              MOV      r5,r0
;;;59     	if (Result != ENOERR)
000094  b125              CBZ      r5,|L1.160|
;;;60     	{
;;;61     		dbg_printf("t0\n\r");
000096  a0de              ADR      r0,|L1.1040|
000098  f7fffffe          BL       __2printf
;;;62     		return Result;
00009c  4628              MOV      r0,r5
                  |L1.158|
;;;63     	}
;;;64     	pBuf = rcvbuf;
;;;65     	WordsCpy(&lcksum, pBuf, 2);
;;;66     	pBuf += 4;
;;;67        // dbg_printf("gcksum=0x%x lcksum=0x%x\n", gcksum, lcksum);
;;;68     
;;;69     	if (inpw(pBuf) != g_packno)
;;;70     	{
;;;71     		dbg_printf("g_packno=%d rcv %d\n", g_packno, inpw(pBuf));
;;;72     		Result = EPACKAGENO;
;;;73     	}
;;;74     	else
;;;75     	{
;;;76     		if (lcksum != gcksum)
;;;77     		{
;;;78     			dbg_printf("gcksum=%x lcksum=%x\n", gcksum, lcksum);
;;;79     			Result = ECHECKSUM;
;;;80     		}
;;;81     		g_packno++;
;;;82     
;;;83     	}
;;;84     	return Result;
;;;85     }
00009e  bd7c              POP      {r2-r6,pc}
                  |L1.160|
0000a0  4cda              LDR      r4,|L1.1036|
0000a2  2202              MOVS     r2,#2                 ;65
0000a4  4621              MOV      r1,r4                 ;65
0000a6  a801              ADD      r0,sp,#4              ;65
0000a8  f7fffffe          BL       WordsCpy
0000ac  1d24              ADDS     r4,r4,#4              ;66
0000ae  6820              LDR      r0,[r4,#0]            ;69
0000b0  49d9              LDR      r1,|L1.1048|
0000b2  6809              LDR      r1,[r1,#0]            ;69  ; g_packno
0000b4  4288              CMP      r0,r1                 ;69
0000b6  d007              BEQ      |L1.200|
0000b8  6822              LDR      r2,[r4,#0]            ;71
0000ba  48d7              LDR      r0,|L1.1048|
0000bc  6801              LDR      r1,[r0,#0]            ;71  ; g_packno
0000be  a0d7              ADR      r0,|L1.1052|
0000c0  f7fffffe          BL       __2printf
0000c4  2503              MOVS     r5,#3                 ;72
0000c6  e012              B        |L1.238|
                  |L1.200|
0000c8  f8bd0004          LDRH     r0,[sp,#4]            ;76
0000cc  49cd              LDR      r1,|L1.1028|
0000ce  8809              LDRH     r1,[r1,#0]            ;76  ; gcksum
0000d0  4288              CMP      r0,r1                 ;76
0000d2  d007              BEQ      |L1.228|
0000d4  f8bd2004          LDRH     r2,[sp,#4]            ;78
0000d8  48ca              LDR      r0,|L1.1028|
0000da  8801              LDRH     r1,[r0,#0]            ;78  ; gcksum
0000dc  a0d4              ADR      r0,|L1.1072|
0000de  f7fffffe          BL       __2printf
0000e2  2504              MOVS     r5,#4                 ;79
                  |L1.228|
0000e4  48cc              LDR      r0,|L1.1048|
0000e6  6800              LDR      r0,[r0,#0]            ;81  ; g_packno
0000e8  1c40              ADDS     r0,r0,#1              ;81
0000ea  49cb              LDR      r1,|L1.1048|
0000ec  6008              STR      r0,[r1,#0]            ;81  ; g_packno
                  |L1.238|
0000ee  4628              MOV      r0,r5                 ;84
0000f0  e7d5              B        |L1.158|
;;;86     
                          ENDP

                  CmdSyncPackno PROC
;;;87     
;;;88     ErrNo CmdSyncPackno(void)
0000f2  b538              PUSH     {r3-r5,lr}
;;;89     {
;;;90     	ErrNo Result;
;;;91     	unsigned long cmdData;
;;;92     	//sync send&recv packno
;;;93     	memset(sendbuf, 0, PACKET_SIZE);
0000f4  2140              MOVS     r1,#0x40
0000f6  48c2              LDR      r0,|L1.1024|
0000f8  f7fffffe          BL       __aeabi_memclr4
;;;94     	memset(sendbuf, 0, PACKET_SIZE);
0000fc  2140              MOVS     r1,#0x40
0000fe  48c0              LDR      r0,|L1.1024|
000100  f7fffffe          BL       __aeabi_memclr4
;;;95     	cmdData = CMD_SYNC_PACKNO;//CMD_UPDATE_APROM
000104  20a4              MOVS     r0,#0xa4
000106  9000              STR      r0,[sp,#0]
;;;96     	WordsCpy(sendbuf + 0, &cmdData, 4);
000108  2204              MOVS     r2,#4
00010a  4669              MOV      r1,sp
00010c  48bc              LDR      r0,|L1.1024|
00010e  f7fffffe          BL       WordsCpy
;;;97     	WordsCpy(sendbuf + 4, &g_packno, 4);
000112  2204              MOVS     r2,#4
000114  49c0              LDR      r1,|L1.1048|
000116  48ba              LDR      r0,|L1.1024|
000118  1d00              ADDS     r0,r0,#4
00011a  f7fffffe          BL       WordsCpy
;;;98     	WordsCpy(sendbuf + 8, &g_packno, 4);
00011e  2204              MOVS     r2,#4
000120  49bd              LDR      r1,|L1.1048|
000122  48b7              LDR      r0,|L1.1024|
000124  3008              ADDS     r0,r0,#8
000126  f7fffffe          BL       WordsCpy
;;;99     	g_packno++;
00012a  48bb              LDR      r0,|L1.1048|
00012c  6800              LDR      r0,[r0,#0]  ; g_packno
00012e  1c40              ADDS     r0,r0,#1
000130  49b9              LDR      r1,|L1.1048|
000132  6008              STR      r0,[r1,#0]  ; g_packno
;;;100    
;;;101    	SendData();
000134  f7fffffe          BL       SendData
;;;102    	Result = RcvData();
000138  f7fffffe          BL       RcvData
00013c  4604              MOV      r4,r0
;;;103    
;;;104    	return Result;
00013e  4620              MOV      r0,r4
;;;105    }
000140  bd38              POP      {r3-r5,pc}
;;;106    
                          ENDP

                  CmdRunLDROM PROC
;;;107    void CmdRunLDROM(void)
000142  b538              PUSH     {r3-r5,lr}
;;;108    {
;;;109    		int i;
;;;110    	unsigned long cmdData;
;;;111    	//sync send&recv packno
;;;112    	memset(sendbuf, 0, PACKET_SIZE);
000144  2140              MOVS     r1,#0x40
000146  48ae              LDR      r0,|L1.1024|
000148  f7fffffe          BL       __aeabi_memclr4
;;;113    	memset(sendbuf, 0, PACKET_SIZE);
00014c  2140              MOVS     r1,#0x40
00014e  48ac              LDR      r0,|L1.1024|
000150  f7fffffe          BL       __aeabi_memclr4
;;;114    	cmdData = CMD_RUN_LDROM;//CMD_UPDATE_APROM
000154  20ac              MOVS     r0,#0xac
000156  9000              STR      r0,[sp,#0]
;;;115    	WordsCpy(sendbuf + 0, &cmdData, 4);
000158  2204              MOVS     r2,#4
00015a  4669              MOV      r1,sp
00015c  48a8              LDR      r0,|L1.1024|
00015e  f7fffffe          BL       WordsCpy
;;;116    	WordsCpy(sendbuf + 4, &g_packno, 4);
000162  2204              MOVS     r2,#4
000164  49ac              LDR      r1,|L1.1048|
000166  48a6              LDR      r0,|L1.1024|
000168  1d00              ADDS     r0,r0,#4
00016a  f7fffffe          BL       WordsCpy
;;;117    	g_packno=0;
00016e  2000              MOVS     r0,#0
000170  49a9              LDR      r1,|L1.1048|
000172  6008              STR      r0,[r1,#0]  ; g_packno
;;;118    
;;;119    	SendData();
000174  f7fffffe          BL       SendData
;;;120    	//delay for reset
;;;121    		for (i = 0; i<200; i++)
000178  2400              MOVS     r4,#0
00017a  e004              B        |L1.390|
                  |L1.380|
;;;122    			CLK_SysTickDelay(1000);
00017c  f44f707a          MOV      r0,#0x3e8
000180  f7fffffe          BL       CLK_SysTickDelay
000184  1c64              ADDS     r4,r4,#1              ;121
                  |L1.390|
000186  2cc8              CMP      r4,#0xc8              ;121
000188  dbf8              BLT      |L1.380|
;;;123    }
00018a  bd38              POP      {r3-r5,pc}
;;;124    
                          ENDP

                  CmdRunAPROM PROC
;;;125    void CmdRunAPROM(void)
00018c  b538              PUSH     {r3-r5,lr}
;;;126    {
;;;127    	int i;
;;;128    	unsigned long cmdData;
;;;129    	//sync send&recv packno
;;;130    	memset(sendbuf, 0, PACKET_SIZE);
00018e  2140              MOVS     r1,#0x40
000190  489b              LDR      r0,|L1.1024|
000192  f7fffffe          BL       __aeabi_memclr4
;;;131    	memset(sendbuf, 0, PACKET_SIZE);
000196  2140              MOVS     r1,#0x40
000198  4899              LDR      r0,|L1.1024|
00019a  f7fffffe          BL       __aeabi_memclr4
;;;132    	cmdData = CMD_RUN_APROM;//CMD_UPDATE_APROM
00019e  20ab              MOVS     r0,#0xab
0001a0  9000              STR      r0,[sp,#0]
;;;133    	WordsCpy(sendbuf + 0, &cmdData, 4);
0001a2  2204              MOVS     r2,#4
0001a4  4669              MOV      r1,sp
0001a6  4896              LDR      r0,|L1.1024|
0001a8  f7fffffe          BL       WordsCpy
;;;134    	WordsCpy(sendbuf + 4, &g_packno, 4);
0001ac  2204              MOVS     r2,#4
0001ae  499a              LDR      r1,|L1.1048|
0001b0  4893              LDR      r0,|L1.1024|
0001b2  1d00              ADDS     r0,r0,#4
0001b4  f7fffffe          BL       WordsCpy
;;;135    	g_packno=0;
0001b8  2000              MOVS     r0,#0
0001ba  4997              LDR      r1,|L1.1048|
0001bc  6008              STR      r0,[r1,#0]  ; g_packno
;;;136    
;;;137    	SendData();
0001be  f7fffffe          BL       SendData
;;;138    	//delay for reset
;;;139    			for (i = 0; i<200; i++)
0001c2  2400              MOVS     r4,#0
0001c4  e004              B        |L1.464|
                  |L1.454|
;;;140    			CLK_SysTickDelay(1000);
0001c6  f44f707a          MOV      r0,#0x3e8
0001ca  f7fffffe          BL       CLK_SysTickDelay
0001ce  1c64              ADDS     r4,r4,#1              ;139
                  |L1.464|
0001d0  2cc8              CMP      r4,#0xc8              ;139
0001d2  dbf8              BLT      |L1.454|
;;;141    }
0001d4  bd38              POP      {r3-r5,pc}
;;;142    
                          ENDP

                  CmdFWVersion PROC
;;;143    ErrNo CmdFWVersion(unsigned int *fwver)
0001d6  b57c              PUSH     {r2-r6,lr}
;;;144    {
0001d8  4604              MOV      r4,r0
;;;145    	ErrNo Result;
;;;146    	unsigned long cmdData;
;;;147    	unsigned int lfwver;
;;;148    
;;;149    	//sync send&recv packno
;;;150    	memset(sendbuf, 0, PACKET_SIZE);
0001da  2140              MOVS     r1,#0x40
0001dc  4888              LDR      r0,|L1.1024|
0001de  f7fffffe          BL       __aeabi_memclr4
;;;151    	cmdData = CMD_GET_FWVER;
0001e2  20a6              MOVS     r0,#0xa6
0001e4  9001              STR      r0,[sp,#4]
;;;152    	WordsCpy(sendbuf + 0, &cmdData, 4);
0001e6  2204              MOVS     r2,#4
0001e8  a901              ADD      r1,sp,#4
0001ea  4885              LDR      r0,|L1.1024|
0001ec  f7fffffe          BL       WordsCpy
;;;153    	WordsCpy(sendbuf + 4, &g_packno, 4);
0001f0  2204              MOVS     r2,#4
0001f2  4989              LDR      r1,|L1.1048|
0001f4  4882              LDR      r0,|L1.1024|
0001f6  1d00              ADDS     r0,r0,#4
0001f8  f7fffffe          BL       WordsCpy
;;;154    	g_packno++;
0001fc  4886              LDR      r0,|L1.1048|
0001fe  6800              LDR      r0,[r0,#0]  ; g_packno
000200  1c40              ADDS     r0,r0,#1
000202  4985              LDR      r1,|L1.1048|
000204  6008              STR      r0,[r1,#0]  ; g_packno
;;;155    
;;;156    	SendData();
000206  f7fffffe          BL       SendData
;;;157    
;;;158    	Result = RcvData();
00020a  f7fffffe          BL       RcvData
00020e  4605              MOV      r5,r0
;;;159    	if (Result==0)
000210  b93d              CBNZ     r5,|L1.546|
;;;160    	{
;;;161    		WordsCpy(&lfwver, rcvbuf + 8, 4);
000212  2204              MOVS     r2,#4
000214  497d              LDR      r1,|L1.1036|
000216  3108              ADDS     r1,r1,#8
000218  4668              MOV      r0,sp
00021a  f7fffffe          BL       WordsCpy
;;;162    		*fwver = lfwver;
00021e  9800              LDR      r0,[sp,#0]
000220  6020              STR      r0,[r4,#0]
                  |L1.546|
;;;163    	}
;;;164    
;;;165    	return Result;
000222  4628              MOV      r0,r5
;;;166    }
000224  bd7c              POP      {r2-r6,pc}
;;;167    
                          ENDP

                  CmdGetDeviceID PROC
;;;169    
;;;170    ErrNo CmdGetDeviceID(unsigned int *devid)
000226  b57c              PUSH     {r2-r6,lr}
;;;171    {
000228  4604              MOV      r4,r0
;;;172    	ErrNo Result;
;;;173    	unsigned long cmdData;
;;;174    	unsigned int ldevid;
;;;175    
;;;176    	//sync send&recv packno
;;;177    	memset(sendbuf, 0, PACKET_SIZE);
00022a  2140              MOVS     r1,#0x40
00022c  4874              LDR      r0,|L1.1024|
00022e  f7fffffe          BL       __aeabi_memclr4
;;;178    	cmdData = CMD_GET_DEVICEID;
000232  20b1              MOVS     r0,#0xb1
000234  9001              STR      r0,[sp,#4]
;;;179    	WordsCpy(sendbuf + 0, &cmdData, 4);
000236  2204              MOVS     r2,#4
000238  a901              ADD      r1,sp,#4
00023a  4871              LDR      r0,|L1.1024|
00023c  f7fffffe          BL       WordsCpy
;;;180    	WordsCpy(sendbuf + 4, &g_packno, 4);
000240  2204              MOVS     r2,#4
000242  4975              LDR      r1,|L1.1048|
000244  486e              LDR      r0,|L1.1024|
000246  1d00              ADDS     r0,r0,#4
000248  f7fffffe          BL       WordsCpy
;;;181    	g_packno++;
00024c  4872              LDR      r0,|L1.1048|
00024e  6800              LDR      r0,[r0,#0]  ; g_packno
000250  1c40              ADDS     r0,r0,#1
000252  4971              LDR      r1,|L1.1048|
000254  6008              STR      r0,[r1,#0]  ; g_packno
;;;182    
;;;183    	SendData();
000256  f7fffffe          BL       SendData
;;;184    
;;;185    	Result = RcvData();
00025a  f7fffffe          BL       RcvData
00025e  4605              MOV      r5,r0
;;;186    	if (Result==0)
000260  b93d              CBNZ     r5,|L1.626|
;;;187    	{
;;;188    		WordsCpy(&ldevid, rcvbuf + 8, 4);
000262  2204              MOVS     r2,#4
000264  4969              LDR      r1,|L1.1036|
000266  3108              ADDS     r1,r1,#8
000268  4668              MOV      r0,sp
00026a  f7fffffe          BL       WordsCpy
;;;189    		*devid = ldevid;
00026e  9800              LDR      r0,[sp,#0]
000270  6020              STR      r0,[r4,#0]
                  |L1.626|
;;;190    	}
;;;191    
;;;192    	return Result;
000272  4628              MOV      r0,r5
;;;193    }
000274  bd7c              POP      {r2-r6,pc}
;;;194    
                          ENDP

                  CmdGetFlashMode PROC
;;;195    
;;;196    ErrNo CmdGetFlashMode(unsigned int *mode)
000276  b57c              PUSH     {r2-r6,lr}
;;;197    {
000278  4604              MOV      r4,r0
;;;198    	ErrNo Result;
;;;199    	unsigned long cmdData;
;;;200    	unsigned int ldevid;
;;;201    
;;;202    	//sync send&recv packno
;;;203    	memset(sendbuf, 0, PACKET_SIZE);
00027a  2140              MOVS     r1,#0x40
00027c  4860              LDR      r0,|L1.1024|
00027e  f7fffffe          BL       __aeabi_memclr4
;;;204    	cmdData = CMD_GET_FLASHMODE;
000282  20ca              MOVS     r0,#0xca
000284  9001              STR      r0,[sp,#4]
;;;205    	WordsCpy(sendbuf + 0, &cmdData, 4);
000286  2204              MOVS     r2,#4
000288  a901              ADD      r1,sp,#4
00028a  485d              LDR      r0,|L1.1024|
00028c  f7fffffe          BL       WordsCpy
;;;206    	WordsCpy(sendbuf + 4, &g_packno, 4);
000290  2204              MOVS     r2,#4
000292  4961              LDR      r1,|L1.1048|
000294  485a              LDR      r0,|L1.1024|
000296  1d00              ADDS     r0,r0,#4
000298  f7fffffe          BL       WordsCpy
;;;207    	g_packno++;
00029c  485e              LDR      r0,|L1.1048|
00029e  6800              LDR      r0,[r0,#0]  ; g_packno
0002a0  1c40              ADDS     r0,r0,#1
0002a2  495d              LDR      r1,|L1.1048|
0002a4  6008              STR      r0,[r1,#0]  ; g_packno
;;;208    
;;;209    	SendData();
0002a6  f7fffffe          BL       SendData
;;;210    
;;;211    	Result = RcvData();
0002aa  f7fffffe          BL       RcvData
0002ae  4605              MOV      r5,r0
;;;212    	if (Result==0)
0002b0  b93d              CBNZ     r5,|L1.706|
;;;213    	{
;;;214    		WordsCpy(&ldevid, rcvbuf + 8, 4);
0002b2  2204              MOVS     r2,#4
0002b4  4955              LDR      r1,|L1.1036|
0002b6  3108              ADDS     r1,r1,#8
0002b8  4668              MOV      r0,sp
0002ba  f7fffffe          BL       WordsCpy
;;;215    		*mode = ldevid;
0002be  9800              LDR      r0,[sp,#0]
0002c0  6020              STR      r0,[r4,#0]
                  |L1.706|
;;;216    	}
;;;217    
;;;218    	return Result;
0002c2  4628              MOV      r0,r5
;;;219    }
0002c4  bd7c              POP      {r2-r6,pc}
;;;220    
                          ENDP

                  CmdGetConfig PROC
;;;221    ErrNo CmdGetConfig(unsigned int *config)
0002c6  b53e              PUSH     {r1-r5,lr}
;;;222    {
0002c8  4604              MOV      r4,r0
;;;223    	ErrNo Result;
;;;224    	unsigned long cmdData;
;;;225    	unsigned int lconfig[2];
;;;226    
;;;227    	//sync send&recv packno
;;;228    	memset(sendbuf, 0, PACKET_SIZE);
0002ca  2140              MOVS     r1,#0x40
0002cc  484c              LDR      r0,|L1.1024|
0002ce  f7fffffe          BL       __aeabi_memclr4
;;;229    	cmdData = CMD_READ_CONFIG;
0002d2  20a2              MOVS     r0,#0xa2
0002d4  9002              STR      r0,[sp,#8]
;;;230    	WordsCpy(sendbuf + 0, &cmdData, 4);
0002d6  2204              MOVS     r2,#4
0002d8  a902              ADD      r1,sp,#8
0002da  4849              LDR      r0,|L1.1024|
0002dc  f7fffffe          BL       WordsCpy
;;;231    	WordsCpy(sendbuf + 4, &g_packno, 4);
0002e0  2204              MOVS     r2,#4
0002e2  494d              LDR      r1,|L1.1048|
0002e4  4846              LDR      r0,|L1.1024|
0002e6  1d00              ADDS     r0,r0,#4
0002e8  f7fffffe          BL       WordsCpy
;;;232    	g_packno++;
0002ec  484a              LDR      r0,|L1.1048|
0002ee  6800              LDR      r0,[r0,#0]  ; g_packno
0002f0  1c40              ADDS     r0,r0,#1
0002f2  4949              LDR      r1,|L1.1048|
0002f4  6008              STR      r0,[r1,#0]  ; g_packno
;;;233    
;;;234    	SendData();
0002f6  f7fffffe          BL       SendData
;;;235    
;;;236    
;;;237    	Result = RcvData();
0002fa  f7fffffe          BL       RcvData
0002fe  4605              MOV      r5,r0
;;;238    	if (Result==0)
000300  b97d              CBNZ     r5,|L1.802|
;;;239    	{
;;;240    		WordsCpy(&lconfig[0], rcvbuf + 8, 4);
000302  2204              MOVS     r2,#4
000304  4941              LDR      r1,|L1.1036|
000306  3108              ADDS     r1,r1,#8
000308  4668              MOV      r0,sp
00030a  f7fffffe          BL       WordsCpy
;;;241    		WordsCpy(&lconfig[1], rcvbuf + 12, 4);
00030e  2204              MOVS     r2,#4
000310  493e              LDR      r1,|L1.1036|
000312  310c              ADDS     r1,r1,#0xc
000314  a801              ADD      r0,sp,#4
000316  f7fffffe          BL       WordsCpy
;;;242    		config[0] = lconfig[0];
00031a  9800              LDR      r0,[sp,#0]
00031c  6020              STR      r0,[r4,#0]
;;;243    		config[1] = lconfig[1];
00031e  9801              LDR      r0,[sp,#4]
000320  6060              STR      r0,[r4,#4]
                  |L1.802|
;;;244    	}
;;;245    
;;;246    	return Result;
000322  4628              MOV      r0,r5
;;;247    }
000324  bd3e              POP      {r1-r5,pc}
;;;248    
                          ENDP

                  auto_detect_command PROC
;;;250    
;;;251    void auto_detect_command(void)
000326  b508              PUSH     {r3,lr}
;;;252    {
;;;253    	unsigned long cmdData;
;;;254    	memset(sendbuf, 0, PACKET_SIZE);
000328  2140              MOVS     r1,#0x40
00032a  4835              LDR      r0,|L1.1024|
00032c  f7fffffe          BL       __aeabi_memclr4
;;;255    	cmdData = CMD_UPDATE_CONNECT;
000330  20ae              MOVS     r0,#0xae
000332  9000              STR      r0,[sp,#0]
;;;256    	
;;;257    	g_packno=1;
000334  2001              MOVS     r0,#1
000336  4938              LDR      r1,|L1.1048|
000338  6008              STR      r0,[r1,#0]  ; g_packno
;;;258    	WordsCpy(sendbuf + 0, &cmdData, 4);
00033a  2204              MOVS     r2,#4
00033c  4669              MOV      r1,sp
00033e  4830              LDR      r0,|L1.1024|
000340  f7fffffe          BL       WordsCpy
;;;259    	WordsCpy(sendbuf + 4, &g_packno, 4);
000344  2204              MOVS     r2,#4
000346  4934              LDR      r1,|L1.1048|
000348  482d              LDR      r0,|L1.1024|
00034a  1d00              ADDS     r0,r0,#4
00034c  f7fffffe          BL       WordsCpy
;;;260    	while(1)
000350  e00b              B        |L1.874|
                  |L1.850|
;;;261    	{
;;;262    	SendData();
000352  f7fffffe          BL       SendData
;;;263    	RcvData();
000356  f7fffffe          BL       RcvData
;;;264    		if (sendbuf[4]+1 == rcvbuf[4] )
00035a  4829              LDR      r0,|L1.1024|
00035c  7900              LDRB     r0,[r0,#4]  ; sendbuf
00035e  1c40              ADDS     r0,r0,#1
000360  492a              LDR      r1,|L1.1036|
000362  7909              LDRB     r1,[r1,#4]  ; rcvbuf
000364  4288              CMP      r0,r1
000366  d100              BNE      |L1.874|
;;;265    			break;
000368  e000              B        |L1.876|
                  |L1.874|
00036a  e7f2              B        |L1.850|
                  |L1.876|
00036c  bf00              NOP      
;;;266    	}
;;;267    
;;;268    }
00036e  bd08              POP      {r3,pc}
;;;269    
                          ENDP

                  CmdUpdateConfig PROC
;;;270    
;;;271    ErrNo CmdUpdateConfig( uint32_t *conf)
000370  b538              PUSH     {r3-r5,lr}
;;;272    {
000372  4604              MOV      r4,r0
;;;273    	ErrNo Result;
;;;274    	unsigned long cmdData;
;;;275    
;;;276    	//sync send&recv packno
;;;277    	memset(sendbuf, 0, PACKET_SIZE);
000374  2140              MOVS     r1,#0x40
000376  4822              LDR      r0,|L1.1024|
000378  f7fffffe          BL       __aeabi_memclr4
;;;278    	cmdData = CMD_UPDATE_CONFIG;
00037c  20a1              MOVS     r0,#0xa1
00037e  9000              STR      r0,[sp,#0]
;;;279    	WordsCpy(sendbuf + 0, &cmdData, 4);
000380  2204              MOVS     r2,#4
000382  4669              MOV      r1,sp
000384  481e              LDR      r0,|L1.1024|
000386  f7fffffe          BL       WordsCpy
;;;280    	WordsCpy(sendbuf + 4, &g_packno, 4);
00038a  2204              MOVS     r2,#4
00038c  4922              LDR      r1,|L1.1048|
00038e  481c              LDR      r0,|L1.1024|
000390  1d00              ADDS     r0,r0,#4
000392  f7fffffe          BL       WordsCpy
;;;281    	WordsCpy(sendbuf + 8, conf, 8);
000396  2208              MOVS     r2,#8
000398  4621              MOV      r1,r4
00039a  4819              LDR      r0,|L1.1024|
00039c  3008              ADDS     r0,r0,#8
00039e  f7fffffe          BL       WordsCpy
;;;282    	g_packno++;
0003a2  481d              LDR      r0,|L1.1048|
0003a4  6800              LDR      r0,[r0,#0]  ; g_packno
0003a6  1c40              ADDS     r0,r0,#1
0003a8  491b              LDR      r1,|L1.1048|
0003aa  6008              STR      r0,[r1,#0]  ; g_packno
;;;283    
;;;284        SendData();
0003ac  f7fffffe          BL       SendData
;;;285    	Result = RcvData();
0003b0  f7fffffe          BL       RcvData
0003b4  4605              MOV      r5,r0
;;;286    
;;;287    	return Result;
0003b6  4628              MOV      r0,r5
;;;288    }
0003b8  bd38              POP      {r3-r5,pc}
;;;289    
                          ENDP

                  UpdatedTargetFalsh PROC
;;;290    ErrNo UpdatedTargetFalsh(uint32_t in_startaddr,uint32_t in_file_totallen)
0003ba  e92d43fe          PUSH     {r1-r9,lr}
;;;291    {
0003be  4680              MOV      r8,r0
0003c0  4689              MOV      r9,r1
;;;292    	ErrNo Result;
;;;293    	unsigned int p=0;
0003c2  2500              MOVS     r5,#0
;;;294    	unsigned short get_cksum;
;;;295    	unsigned long cmdData;
;;;296    	unsigned long startaddr=in_startaddr;
0003c4  f8cd8004          STR      r8,[sp,#4]
;;;297    	unsigned long AP_file_totallen=in_file_totallen;
0003c8  f8cd9000          STR      r9,[sp,#0]
;;;298     for(p=0;p<512;p++)
0003cc  bf00              NOP      
0003ce  e008              B        |L1.994|
                  |L1.976|
;;;299    	{
;;;300    file_buffer[p]=p&0xff;
0003d0  491d              LDR      r1,|L1.1096|
0003d2  554d              STRB     r5,[r1,r5]
;;;301    		AP_file_checksum=AP_file_checksum+(p&0xff);
0003d4  b2e8              UXTB     r0,r5
0003d6  491d              LDR      r1,|L1.1100|
0003d8  6809              LDR      r1,[r1,#0]  ; AP_file_checksum
0003da  4408              ADD      r0,r0,r1
0003dc  491b              LDR      r1,|L1.1100|
0003de  6008              STR      r0,[r1,#0]  ; AP_file_checksum
0003e0  1c6d              ADDS     r5,r5,#1              ;298
                  |L1.994|
0003e2  f5b57f00          CMP      r5,#0x200             ;298
0003e6  d3f3              BCC      |L1.976|
;;;302    	}
;;;303    	memset(sendbuf, 0, PACKET_SIZE);
0003e8  2140              MOVS     r1,#0x40
0003ea  4805              LDR      r0,|L1.1024|
0003ec  f7fffffe          BL       __aeabi_memclr4
;;;304    	cmdData = CMD_UPDATE_APROM;//CMD_UPDATE_APROM
0003f0  20a0              MOVS     r0,#0xa0
0003f2  9002              STR      r0,[sp,#8]
;;;305    	WordsCpy(sendbuf + 0, &cmdData, 4);
0003f4  2204              MOVS     r2,#4
0003f6  a902              ADD      r1,sp,#8
0003f8  4801              LDR      r0,|L1.1024|
0003fa  e029              B        |L1.1104|
                  |L1.1020|
                          DCD      CyclesPerUs
                  |L1.1024|
                          DCD      sendbuf
                  |L1.1028|
                          DCD      gcksum
                  |L1.1032|
                          DCD      DEV_handle
                  |L1.1036|
                          DCD      rcvbuf
                  |L1.1040|
000410  74300a0d          DCB      "t0\n\r",0
000414  00      
000415  00                DCB      0
000416  00                DCB      0
000417  00                DCB      0
                  |L1.1048|
                          DCD      g_packno
                  |L1.1052|
00041c  675f7061          DCB      "g_packno=%d rcv %d\n",0
000420  636b6e6f
000424  3d256420
000428  72637620
00042c  25640a00
                  |L1.1072|
000430  67636b73          DCB      "gcksum=%x lcksum=%x\n",0
000434  756d3d25
000438  78206c63
00043c  6b73756d
000440  3d25780a
000444  00      
000445  00                DCB      0
000446  00                DCB      0
000447  00                DCB      0
                  |L1.1096|
                          DCD      file_buffer
                  |L1.1100|
                          DCD      AP_file_checksum
                  |L1.1104|
000450  f7fffffe          BL       WordsCpy
;;;306    	WordsCpy(sendbuf + 4, &g_packno, 4);
000454  2204              MOVS     r2,#4
000456  4978              LDR      r1,|L1.1592|
000458  4878              LDR      r0,|L1.1596|
00045a  f7fffffe          BL       WordsCpy
;;;307    	g_packno++;
00045e  4876              LDR      r0,|L1.1592|
000460  6800              LDR      r0,[r0,#0]  ; g_packno
000462  1c40              ADDS     r0,r0,#1
000464  4974              LDR      r1,|L1.1592|
000466  6008              STR      r0,[r1,#0]  ; g_packno
;;;308    	//start address
;;;309    	startaddr = 0;
000468  2000              MOVS     r0,#0
00046a  9001              STR      r0,[sp,#4]
;;;310    	WordsCpy(sendbuf + 8, &startaddr, 4);
00046c  2204              MOVS     r2,#4
00046e  a901              ADD      r1,sp,#4
000470  4872              LDR      r0,|L1.1596|
000472  1d00              ADDS     r0,r0,#4
000474  f7fffffe          BL       WordsCpy
;;;311    	WordsCpy(sendbuf + 12, (void *)&AP_file_totallen, 4);
000478  2204              MOVS     r2,#4
00047a  4669              MOV      r1,sp
00047c  486f              LDR      r0,|L1.1596|
00047e  3008              ADDS     r0,r0,#8
000480  f7fffffe          BL       WordsCpy
;;;312    
;;;313    
;;;314    	WordsCpy(sendbuf + 16, file_buffer, 48);
000484  2230              MOVS     r2,#0x30
000486  496e              LDR      r1,|L1.1600|
000488  486c              LDR      r0,|L1.1596|
00048a  300c              ADDS     r0,r0,#0xc
00048c  f7fffffe          BL       WordsCpy
;;;315    
;;;316    	SendData();
000490  f7fffffe          BL       SendData
;;;317    devtab_entry_t *t = (devtab_entry_t *)DEV_handle;
000494  486b              LDR      r0,|L1.1604|
000496  6807              LDR      r7,[r0,#0]  ; DEV_handle
;;;318    
;;;319    				 if(str_compare(SPI_NAME_STRING,t->name))
000498  a06b              ADR      r0,|L1.1608|
00049a  6839              LDR      r1,[r7,#0]
00049c  f7fffffe          BL       str_compare
0004a0  b150              CBZ      r0,|L1.1208|
;;;320    				 {
;;;321    				//delay for erase 
;;;322    				for(unsigned int i=0;i<5000;i++)
0004a2  2600              MOVS     r6,#0
0004a4  e004              B        |L1.1200|
                  |L1.1190|
;;;323    				CLK_SysTickDelay(2000);
0004a6  f44f60fa          MOV      r0,#0x7d0
0004aa  f7fffffe          BL       CLK_SysTickDelay
0004ae  1c76              ADDS     r6,r6,#1              ;322
                  |L1.1200|
0004b0  f2413088          MOV      r0,#0x1388            ;322
0004b4  4286              CMP      r6,r0                 ;322
0004b6  d3f6              BCC      |L1.1190|
                  |L1.1208|
;;;324    					 
;;;325    				 }
;;;326    				 if(str_compare(CAN_NAME_STRING,t->name))
0004b8  a065              ADR      r0,|L1.1616|
0004ba  6839              LDR      r1,[r7,#0]
0004bc  f7fffffe          BL       str_compare
0004c0  b150              CBZ      r0,|L1.1240|
;;;327    				 {
;;;328    					 //delay for erase 
;;;329    				for(unsigned int i=0;i<5000;i++)
0004c2  2600              MOVS     r6,#0
0004c4  e004              B        |L1.1232|
                  |L1.1222|
;;;330    				CLK_SysTickDelay(2000);	 
0004c6  f44f60fa          MOV      r0,#0x7d0
0004ca  f7fffffe          BL       CLK_SysTickDelay
0004ce  1c76              ADDS     r6,r6,#1              ;329
                  |L1.1232|
0004d0  f2413088          MOV      r0,#0x1388            ;329
0004d4  4286              CMP      r6,r0                 ;329
0004d6  d3f6              BCC      |L1.1222|
                  |L1.1240|
;;;331    				 }
;;;332    				 
;;;333    				 if(str_compare(I2C_NAME_STRING,t->name))
0004d8  a05f              ADR      r0,|L1.1624|
0004da  6839              LDR      r1,[r7,#0]
0004dc  f7fffffe          BL       str_compare
0004e0  b150              CBZ      r0,|L1.1272|
;;;334    				 {
;;;335    					 //delay for erase 
;;;336    				for(unsigned int i=0;i<5000;i++)
0004e2  2600              MOVS     r6,#0
0004e4  e004              B        |L1.1264|
                  |L1.1254|
;;;337    				CLK_SysTickDelay(2000);	 
0004e6  f44f60fa          MOV      r0,#0x7d0
0004ea  f7fffffe          BL       CLK_SysTickDelay
0004ee  1c76              ADDS     r6,r6,#1              ;336
                  |L1.1264|
0004f0  f2413088          MOV      r0,#0x1388            ;336
0004f4  4286              CMP      r6,r0                 ;336
0004f6  d3f6              BCC      |L1.1254|
                  |L1.1272|
;;;338    				 }
;;;339    	
;;;340    	
;;;341    	
;;;342    	Result = RcvData();
0004f8  f7fffffe          BL       RcvData
0004fc  4604              MOV      r4,r0
;;;343    	if (Result != ENOERR)
0004fe  b114              CBZ      r4,|L1.1286|
;;;344    		return Result;
000500  4620              MOV      r0,r4
                  |L1.1282|
;;;345    printf("Erase done!\n\r");
;;;346    	for (unsigned int i = 48; i < AP_file_totallen; i = i + 56)
;;;347    	{
;;;348    		printf("i=%d \n\r", i);
;;;349    		//clear buffer
;;;350        memset(sendbuf, 0, PACKET_SIZE);
;;;351      //set package number to buffer
;;;352    		WordsCpy(sendbuf + 4, &g_packno, 4);
;;;353    		g_packno++;
;;;354    		if ((AP_file_totallen - i) > 56)
;;;355    		{
;;;356    
;;;357    			WordsCpy(sendbuf + 8, &file_buffer[0], 56);
;;;358    
;;;359    	    SendData();
;;;360    
;;;361    			Result = RcvData();
;;;362    			if (Result != ENOERR)
;;;363    				  return Result;
;;;364    		}
;;;365    		else
;;;366    		{
;;;367    		
;;;368    			
;;;369    			WordsCpy(sendbuf + 8, &file_buffer, AP_file_totallen - i);
;;;370    			//read target chip checksum
;;;371          SendData();
;;;372    
;;;373    			Result = RcvData();
;;;374    			if (Result != ENOERR)
;;;375    				return Result;
;;;376    
;;;377    			//WordsCpy(&get_cksum, rcvbuf + 8, 2);
;;;378    			//if ((AP_file_checksum & 0xffff) != get_cksum)
;;;379    			//{
;;;380    			//	return EFILECHECKSUM;
;;;381    			//}
;;;382    		}
;;;383    	}
;;;384    
;;;385      return ENOERR;
;;;386    
;;;387      
;;;388    
;;;389    }
000502  e8bd83fe          POP      {r1-r9,pc}
                  |L1.1286|
000506  a056              ADR      r0,|L1.1632|
000508  f7fffffe          BL       __2printf
00050c  2630              MOVS     r6,#0x30              ;346
00050e  e034              B        |L1.1402|
                  |L1.1296|
000510  4631              MOV      r1,r6                 ;348
000512  a057              ADR      r0,|L1.1648|
000514  f7fffffe          BL       __2printf
000518  2140              MOVS     r1,#0x40              ;350
00051a  4848              LDR      r0,|L1.1596|
00051c  1f00              SUBS     r0,r0,#4              ;350
00051e  f7fffffe          BL       __aeabi_memclr4
000522  2204              MOVS     r2,#4                 ;352
000524  4944              LDR      r1,|L1.1592|
000526  4845              LDR      r0,|L1.1596|
000528  f7fffffe          BL       WordsCpy
00052c  4842              LDR      r0,|L1.1592|
00052e  6800              LDR      r0,[r0,#0]            ;353  ; g_packno
000530  1c40              ADDS     r0,r0,#1              ;353
000532  4941              LDR      r1,|L1.1592|
000534  6008              STR      r0,[r1,#0]            ;353  ; g_packno
000536  9800              LDR      r0,[sp,#0]            ;354
000538  1b80              SUBS     r0,r0,r6              ;354
00053a  2838              CMP      r0,#0x38              ;354
00053c  d90d              BLS      |L1.1370|
00053e  2238              MOVS     r2,#0x38              ;357
000540  493f              LDR      r1,|L1.1600|
000542  483e              LDR      r0,|L1.1596|
000544  1d00              ADDS     r0,r0,#4              ;357
000546  f7fffffe          BL       WordsCpy
00054a  f7fffffe          BL       SendData
00054e  f7fffffe          BL       RcvData
000552  4604              MOV      r4,r0                 ;361
000554  b184              CBZ      r4,|L1.1400|
000556  4620              MOV      r0,r4                 ;363
000558  e7d3              B        |L1.1282|
                  |L1.1370|
00055a  9800              LDR      r0,[sp,#0]            ;369
00055c  1b82              SUBS     r2,r0,r6              ;369
00055e  4938              LDR      r1,|L1.1600|
000560  4836              LDR      r0,|L1.1596|
000562  1d00              ADDS     r0,r0,#4              ;369
000564  f7fffffe          BL       WordsCpy
000568  f7fffffe          BL       SendData
00056c  f7fffffe          BL       RcvData
000570  4604              MOV      r4,r0                 ;373
000572  b10c              CBZ      r4,|L1.1400|
000574  4620              MOV      r0,r4                 ;375
000576  e7c4              B        |L1.1282|
                  |L1.1400|
000578  3638              ADDS     r6,r6,#0x38           ;346
                  |L1.1402|
00057a  9800              LDR      r0,[sp,#0]            ;346
00057c  4286              CMP      r6,r0                 ;346
00057e  d3c7              BCC      |L1.1296|
000580  2000              MOVS     r0,#0                 ;385
000582  e7be              B        |L1.1282|
;;;390    
                          ENDP

                  init_ISP_command PROC
;;;393    
;;;394    void init_ISP_command(void)
000584  f2af4095          ADR      r0,CmdSyncPackno + 1
;;;395    {
;;;396      ISP_COMMAND.ISPSyncPackno=CmdSyncPackno;
000588  493b              LDR      r1,|L1.1656|
00058a  6048              STR      r0,[r1,#4]  ; ISP_COMMAND
;;;397    	ISP_COMMAND.ISPFWVersion=CmdFWVersion;
00058c  f2af30b9          ADR      r0,CmdFWVersion + 1
000590  6088              STR      r0,[r1,#8]  ; ISP_COMMAND
;;;398    	ISP_COMMAND.ISPGetDeviceID=CmdGetDeviceID;
000592  f2af306d          ADR      r0,CmdGetDeviceID + 1
000596  6108              STR      r0,[r1,#0x10]  ; ISP_COMMAND
;;;399    	ISP_COMMAND.ISPGetFlashMode=CmdGetFlashMode;
000598  f2af3025          ADR      r0,CmdGetFlashMode + 1
00059c  60c8              STR      r0,[r1,#0xc]  ; ISP_COMMAND
;;;400    	ISP_COMMAND.ISPGetConfig=CmdGetConfig;
00059e  f2af20d9          ADR      r0,CmdGetConfig + 1
0005a2  6148              STR      r0,[r1,#0x14]  ; ISP_COMMAND
;;;401    	ISP_COMMAND.ISPUpdateConfig=CmdUpdateConfig;
0005a4  f2af2037          ADR      r0,CmdUpdateConfig + 1
0005a8  6188              STR      r0,[r1,#0x18]  ; ISP_COMMAND
;;;402    	ISP_COMMAND.ISPCmdRunLDROM=CmdRunLDROM;
0005aa  f2af4069          ADR      r0,CmdRunLDROM + 1
0005ae  61c8              STR      r0,[r1,#0x1c]  ; ISP_COMMAND
;;;403    	ISP_COMMAND.ISPCmdRunAPROM=CmdRunAPROM;
0005b0  f2af4027          ADR      r0,CmdRunAPROM + 1
0005b4  6208              STR      r0,[r1,#0x20]  ; ISP_COMMAND
;;;404    	ISP_COMMAND.ISPauto_detect_command=auto_detect_command;
0005b6  f2af2091          ADR      r0,auto_detect_command + 1
0005ba  6008              STR      r0,[r1,#0]  ; ISP_COMMAND
;;;405    	ISP_COMMAND.ISPUpdateFlash=UpdatedTargetFalsh;
0005bc  f2af2005          ADR      r0,UpdatedTargetFalsh + 1
0005c0  6248              STR      r0,[r1,#0x24]  ; ISP_COMMAND
;;;406    }
0005c2  4770              BX       lr
;;;407    
                          ENDP

                  SyncPackno PROC
;;;408    int SyncPackno(struct sISP_COMMAND *gISP_COMMAND)
0005c4  b510              PUSH     {r4,lr}
;;;409    {
0005c6  4604              MOV      r4,r0
;;;410    	 return gISP_COMMAND->ISPSyncPackno();
0005c8  6860              LDR      r0,[r4,#4]
0005ca  4780              BLX      r0
;;;411    }
0005cc  bd10              POP      {r4,pc}
;;;412    
                          ENDP

                  Auto_Detect_Connect PROC
;;;413    void Auto_Detect_Connect(struct sISP_COMMAND *gISP_COMMAND)
0005ce  b510              PUSH     {r4,lr}
;;;414    {
0005d0  4604              MOV      r4,r0
;;;415    	   gISP_COMMAND->ISPauto_detect_command();
0005d2  6820              LDR      r0,[r4,#0]
0005d4  4780              BLX      r0
;;;416    }
0005d6  bd10              POP      {r4,pc}
;;;417    
                          ENDP

                  FWVersion PROC
;;;418    
;;;419    int FWVersion(struct sISP_COMMAND *gISP_COMMAND,uint32_t *buff)
0005d8  b570              PUSH     {r4-r6,lr}
;;;420    {
0005da  4604              MOV      r4,r0
0005dc  460d              MOV      r5,r1
;;;421    	return gISP_COMMAND->ISPFWVersion(buff);
0005de  4628              MOV      r0,r5
0005e0  68a1              LDR      r1,[r4,#8]
0005e2  4788              BLX      r1
;;;422    }
0005e4  bd70              POP      {r4-r6,pc}
;;;423    
                          ENDP

                  GetDeviceID PROC
;;;424    
;;;425    int GetDeviceID(struct sISP_COMMAND *gISP_COMMAND,uint32_t *buff)
0005e6  b570              PUSH     {r4-r6,lr}
;;;426    {
0005e8  4604              MOV      r4,r0
0005ea  460d              MOV      r5,r1
;;;427    	return gISP_COMMAND->ISPGetDeviceID(buff);
0005ec  4628              MOV      r0,r5
0005ee  6921              LDR      r1,[r4,#0x10]
0005f0  4788              BLX      r1
;;;428    }
0005f2  bd70              POP      {r4-r6,pc}
;;;429    
                          ENDP

                  GetConfig PROC
;;;430    int GetConfig(struct sISP_COMMAND *gISP_COMMAND,uint32_t *buff)
0005f4  b570              PUSH     {r4-r6,lr}
;;;431    {
0005f6  4604              MOV      r4,r0
0005f8  460d              MOV      r5,r1
;;;432    	
;;;433    	return gISP_COMMAND->ISPGetConfig(buff);
0005fa  4628              MOV      r0,r5
0005fc  6961              LDR      r1,[r4,#0x14]
0005fe  4788              BLX      r1
;;;434    }
000600  bd70              POP      {r4-r6,pc}
;;;435    
                          ENDP

                  GetFlashMode PROC
;;;436    int GetFlashMode(struct sISP_COMMAND *gISP_COMMAND,uint32_t *buff)
000602  b570              PUSH     {r4-r6,lr}
;;;437    {
000604  4604              MOV      r4,r0
000606  460d              MOV      r5,r1
;;;438    	return gISP_COMMAND->ISPGetFlashMode(buff);
000608  4628              MOV      r0,r5
00060a  68e1              LDR      r1,[r4,#0xc]
00060c  4788              BLX      r1
;;;439    }
00060e  bd70              POP      {r4-r6,pc}
;;;440    void RunLDROM(struct sISP_COMMAND *gISP_COMMAND)
                          ENDP

                  RunLDROM PROC
000610  b510              PUSH     {r4,lr}
;;;441    {
000612  4604              MOV      r4,r0
;;;442    	 gISP_COMMAND->ISPCmdRunLDROM();
000614  69e0              LDR      r0,[r4,#0x1c]
000616  4780              BLX      r0
;;;443    }
000618  bd10              POP      {r4,pc}
;;;444    
                          ENDP

                  RunAPROM PROC
;;;445    void RunAPROM(struct sISP_COMMAND *gISP_COMMAND)
00061a  b510              PUSH     {r4,lr}
;;;446    {
00061c  4604              MOV      r4,r0
;;;447    	 gISP_COMMAND->ISPCmdRunAPROM();
00061e  6a20              LDR      r0,[r4,#0x20]
000620  4780              BLX      r0
;;;448    }
000622  bd10              POP      {r4,pc}
;;;449    
                          ENDP

                  Updated_Target_Flash PROC
;;;450    int Updated_Target_Flash(struct sISP_COMMAND *gISP_COMMAND,uint32_t in_startaddr,uint32_t in_file_totallen)
000624  b570              PUSH     {r4-r6,lr}
;;;451    {
000626  4604              MOV      r4,r0
000628  460d              MOV      r5,r1
00062a  4616              MOV      r6,r2
;;;452    	 return gISP_COMMAND->ISPUpdateFlash(in_startaddr,in_file_totallen);
00062c  4631              MOV      r1,r6
00062e  4628              MOV      r0,r5
000630  6a62              LDR      r2,[r4,#0x24]
000632  4790              BLX      r2
;;;453    }
000634  bd70              POP      {r4-r6,pc}
;;;454    
                          ENDP

000636  0000              DCW      0x0000
                  |L1.1592|
                          DCD      g_packno
                  |L1.1596|
                          DCD      sendbuf+0x4
                  |L1.1600|
                          DCD      file_buffer
                  |L1.1604|
                          DCD      DEV_handle
                  |L1.1608|
000648  53504930          DCB      "SPI0",0
00064c  00      
00064d  00                DCB      0
00064e  00                DCB      0
00064f  00                DCB      0
                  |L1.1616|
000650  43414e30          DCB      "CAN0",0
000654  00      
000655  00                DCB      0
000656  00                DCB      0
000657  00                DCB      0
                  |L1.1624|
000658  49324330          DCB      "I2C0",0
00065c  00      
00065d  00                DCB      0
00065e  00                DCB      0
00065f  00                DCB      0
                  |L1.1632|
000660  45726173          DCB      "Erase done!\n\r",0
000664  6520646f
000668  6e65210a
00066c  0d00    
00066e  00                DCB      0
00066f  00                DCB      0
                  |L1.1648|
000670  693d2564          DCB      "i=%d \n\r",0
000674  200a0d00
                  |L1.1656|
                          DCD      ISP_COMMAND

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  rcvbuf
                          %        64
                  sendbuf
                          %        64
                  file_buffer
                          %        512
                  ISP_COMMAND
                          %        40

                          AREA ||.data||, DATA, ALIGN=2

                  g_packno
                          DCD      0x00000001
                  gcksum
000004  00000000          DCB      0x00,0x00,0x00,0x00
                  AP_file_totallen
                          DCD      0x00000000
                  AP_file_checksum
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\ISP_CMD.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___9_ISP_CMD_c_g_packno____REV16|
#line 388 "..\\..\\..\\..\\Library\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___9_ISP_CMD_c_g_packno____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___9_ISP_CMD_c_g_packno____REVSH|
#line 402
|__asm___9_ISP_CMD_c_g_packno____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___9_ISP_CMD_c_g_packno____RRX|
#line 587
|__asm___9_ISP_CMD_c_g_packno____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
