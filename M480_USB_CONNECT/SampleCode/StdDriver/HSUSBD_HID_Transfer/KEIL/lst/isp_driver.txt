; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --debug -c --asm --interleave -o.\obj\isp_driver.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\isp_driver.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931 -I..\..\..\..\Library\CMSIS\Include -I..\..\..\..\Library\StdDriver\inc -I..\..\..\..\Library\Device\Nuvoton\M480\Include -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=526 -DDEBUG_ENABLE_SEMIHOST --omf_browse=.\obj\isp_driver.crf ..\ISP_DRIVER.C]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  io_compare PROC
;;;61     
;;;62     static int io_compare(const char *n1, const char *n2, const char **ptr)
000000  b530              PUSH     {r4,r5,lr}
;;;63     {
000002  4603              MOV      r3,r0
;;;64     	while (*n1 && *n2) {
000004  e007              B        |L1.22|
                  |L1.6|
;;;65     		if (*n1++ != *n2++) {
000006  f8134b01          LDRB     r4,[r3],#1
00000a  f8115b01          LDRB     r5,[r1],#1
00000e  42ac              CMP      r4,r5
000010  d001              BEQ      |L1.22|
;;;66     			return 0;
000012  2000              MOVS     r0,#0
                  |L1.20|
;;;67     		}
;;;68     	}
;;;69     	if (*n1) {
;;;70     		// See if the devtab name is is a substring
;;;71     		if (*(n2 - 1) == '/') {
;;;72     			*ptr = n1;
;;;73     			return 1;
;;;74     		}
;;;75     	}
;;;76     	if (*n1 || *n2) {
;;;77     		return 0;
;;;78     	}
;;;79     	*ptr = n1;
;;;80     	return 1;
;;;81     }
000014  bd30              POP      {r4,r5,pc}
                  |L1.22|
000016  7818              LDRB     r0,[r3,#0]            ;64
000018  b110              CBZ      r0,|L1.32|
00001a  7808              LDRB     r0,[r1,#0]            ;64
00001c  2800              CMP      r0,#0                 ;64
00001e  d1f2              BNE      |L1.6|
                  |L1.32|
000020  7818              LDRB     r0,[r3,#0]            ;69
000022  b130              CBZ      r0,|L1.50|
000024  f8110c01          LDRB     r0,[r1,#-1]           ;71
000028  282f              CMP      r0,#0x2f              ;71
00002a  d102              BNE      |L1.50|
00002c  6013              STR      r3,[r2,#0]            ;72
00002e  2001              MOVS     r0,#1                 ;73
000030  e7f0              B        |L1.20|
                  |L1.50|
000032  7818              LDRB     r0,[r3,#0]            ;76
000034  b908              CBNZ     r0,|L1.58|
000036  7808              LDRB     r0,[r1,#0]            ;76
000038  b108              CBZ      r0,|L1.62|
                  |L1.58|
00003a  2000              MOVS     r0,#0                 ;77
00003c  e7ea              B        |L1.20|
                  |L1.62|
00003e  6013              STR      r3,[r2,#0]            ;79
000040  2001              MOVS     r0,#1                 ;80
000042  e7e7              B        |L1.20|
;;;82     
                          ENDP

                  io_open PROC
;;;83     ErrNo  io_open(const char *dev_name, io_handle_t *io_handle)
000044  e92d43f8          PUSH     {r3-r9,lr}
;;;84     {
000048  4680              MOV      r8,r0
00004a  460d              MOV      r5,r1
;;;85     		devtab_entry_t *p_devtab_entry;
;;;86     		uint32 devtab_size, i;
;;;87     		const char  *name_ptr;
;;;88     		ErrNo re;
;;;89     
;;;90     		if (dev_name == 0 || io_handle == 0)
00004c  f1b80f00          CMP      r8,#0
000050  d000              BEQ      |L1.84|
000052  b91d              CBNZ     r5,|L1.92|
                  |L1.84|
;;;91     		{
;;;92     			return -EINVAL;
000054  f06f0015          MVN      r0,#0x15
                  |L1.88|
;;;93     		}
;;;94     
;;;95     		p_devtab_entry = (devtab_entry_t *)DevTab;
;;;96     
;;;97     		devtab_size = sizeof(DevTab) / sizeof(devtab_entry_t);
;;;98     
;;;99     		for (i = 0; i < devtab_size; i++)
;;;100    		{
;;;101    			if (io_compare(dev_name, p_devtab_entry->name, &name_ptr))
;;;102    			{
;;;103    				if (p_devtab_entry->init)
;;;104    				{
;;;105    					re = p_devtab_entry->init((void *)p_devtab_entry);
;;;106    					if (re != ENOERR)
;;;107    						return re;
;;;108    
;;;109    					*io_handle = (io_handle_t *)p_devtab_entry; 
;;;110    					return re;
;;;111    				}
;;;112    			}
;;;113    			p_devtab_entry++;
;;;114    		}
;;;115    
;;;116    		return -ENOENT;
;;;117    }
000058  e8bd83f8          POP      {r3-r9,pc}
                  |L1.92|
00005c  4c3d              LDR      r4,|L1.340|
00005e  f04f0905          MOV      r9,#5                 ;97
000062  2600              MOVS     r6,#0                 ;99
000064  e013              B        |L1.142|
                  |L1.102|
000066  466a              MOV      r2,sp                 ;101
000068  4640              MOV      r0,r8                 ;101
00006a  6821              LDR      r1,[r4,#0]            ;101
00006c  f7fffffe          BL       io_compare
000070  b158              CBZ      r0,|L1.138|
000072  68a0              LDR      r0,[r4,#8]            ;103
000074  b148              CBZ      r0,|L1.138|
000076  4620              MOV      r0,r4                 ;105
000078  68a1              LDR      r1,[r4,#8]            ;105
00007a  4788              BLX      r1                    ;105
00007c  4607              MOV      r7,r0                 ;105
00007e  b10f              CBZ      r7,|L1.132|
000080  4638              MOV      r0,r7                 ;107
000082  e7e9              B        |L1.88|
                  |L1.132|
000084  602c              STR      r4,[r5,#0]            ;109
000086  4638              MOV      r0,r7                 ;110
000088  e7e6              B        |L1.88|
                  |L1.138|
00008a  340c              ADDS     r4,r4,#0xc            ;113
00008c  1c76              ADDS     r6,r6,#1              ;99
                  |L1.142|
00008e  454e              CMP      r6,r9                 ;99
000090  d3e9              BCC      |L1.102|
000092  f06f0001          MVN      r0,#1                 ;116
000096  e7df              B        |L1.88|
;;;118    
                          ENDP

                  io_write PROC
;;;119    ErrNo io_write(io_handle_t handle, const void *buf, uint32 *len)
000098  e92d41f0          PUSH     {r4-r8,lr}
;;;120    {
00009c  4605              MOV      r5,r0
00009e  460f              MOV      r7,r1
0000a0  4614              MOV      r4,r2
;;;121    	devtab_entry_t *t = (devtab_entry_t *)handle;
0000a2  462e              MOV      r6,r5
;;;122    
;;;123    	if (handle == NULL || buf == NULL || len == NULL)
0000a4  b10d              CBZ      r5,|L1.170|
0000a6  b107              CBZ      r7,|L1.170|
0000a8  b91c              CBNZ     r4,|L1.178|
                  |L1.170|
;;;124    	{
;;;125    		return -EINVAL;
0000aa  f06f0015          MVN      r0,#0x15
                  |L1.174|
;;;126    	}
;;;127    	// Validate request
;;;128    	if (!t->handlers->write) {
;;;129    		return -EDEVNOSUPP;
;;;130    	}
;;;131    	// Special check.  If length is zero, this just verifies that the
;;;132    	// 'write' method exists for the given device.
;;;133    	if (NULL != len && 0 == *len) {
;;;134    		return ENOERR;
;;;135    	}
;;;136    	return t->handlers->write(handle, buf, len);
;;;137    }
0000ae  e8bd81f0          POP      {r4-r8,pc}
                  |L1.178|
0000b2  6870              LDR      r0,[r6,#4]            ;128
0000b4  6800              LDR      r0,[r0,#0]            ;128
0000b6  b910              CBNZ     r0,|L1.190|
0000b8  f06f00c9          MVN      r0,#0xc9              ;129
0000bc  e7f7              B        |L1.174|
                  |L1.190|
0000be  b11c              CBZ      r4,|L1.200|
0000c0  6820              LDR      r0,[r4,#0]            ;133
0000c2  b908              CBNZ     r0,|L1.200|
0000c4  2000              MOVS     r0,#0                 ;134
0000c6  e7f2              B        |L1.174|
                  |L1.200|
0000c8  6870              LDR      r0,[r6,#4]            ;136
0000ca  4622              MOV      r2,r4                 ;136
0000cc  4639              MOV      r1,r7                 ;136
0000ce  6803              LDR      r3,[r0,#0]            ;136
0000d0  4628              MOV      r0,r5                 ;136
0000d2  4798              BLX      r3                    ;136
0000d4  e7eb              B        |L1.174|
;;;138    
                          ENDP

                  io_read PROC
;;;142    
;;;143    ErrNo io_read(io_handle_t handle, void *buf, uint32 *len)
0000d6  e92d41f0          PUSH     {r4-r8,lr}
;;;144    {
0000da  4605              MOV      r5,r0
0000dc  460f              MOV      r7,r1
0000de  4614              MOV      r4,r2
;;;145    	devtab_entry_t *t = (devtab_entry_t *)handle;
0000e0  462e              MOV      r6,r5
;;;146    
;;;147    	if (handle == NULL || buf == NULL || len == NULL)
0000e2  b10d              CBZ      r5,|L1.232|
0000e4  b107              CBZ      r7,|L1.232|
0000e6  b91c              CBNZ     r4,|L1.240|
                  |L1.232|
;;;148    	{
;;;149    		return -EINVAL;
0000e8  f06f0015          MVN      r0,#0x15
                  |L1.236|
;;;150    	}
;;;151    
;;;152    	// Validate request
;;;153    	if (!t->handlers->read) {
;;;154    		return -EDEVNOSUPP;
;;;155    	}
;;;156    	// Special check.  If length is zero, this just verifies that the
;;;157    	// 'read' method exists for the given device.
;;;158    	if (NULL != len && 0 == *len) {
;;;159    		return ENOERR;
;;;160    	}
;;;161    	return t->handlers->read(handle, buf, len);
;;;162    }
0000ec  e8bd81f0          POP      {r4-r8,pc}
                  |L1.240|
0000f0  6870              LDR      r0,[r6,#4]            ;153
0000f2  6840              LDR      r0,[r0,#4]            ;153
0000f4  b910              CBNZ     r0,|L1.252|
0000f6  f06f00c9          MVN      r0,#0xc9              ;154
0000fa  e7f7              B        |L1.236|
                  |L1.252|
0000fc  b11c              CBZ      r4,|L1.262|
0000fe  6820              LDR      r0,[r4,#0]            ;158
000100  b908              CBNZ     r0,|L1.262|
000102  2000              MOVS     r0,#0                 ;159
000104  e7f2              B        |L1.236|
                  |L1.262|
000106  6870              LDR      r0,[r6,#4]            ;161
000108  4622              MOV      r2,r4                 ;161
00010a  4639              MOV      r1,r7                 ;161
00010c  6843              LDR      r3,[r0,#4]            ;161
00010e  4628              MOV      r0,r5                 ;161
000110  4798              BLX      r3                    ;161
000112  e7eb              B        |L1.236|
;;;163    int str_compare(const char *n1, const char *n2)
                          ENDP

                  str_compare PROC
000114  b510              PUSH     {r4,lr}
;;;164    {
000116  4602              MOV      r2,r0
;;;165    	while (*n1 && *n2) {
000118  e007              B        |L1.298|
                  |L1.282|
;;;166    		if (*n1++ != *n2++) {
00011a  f8123b01          LDRB     r3,[r2],#1
00011e  f8114b01          LDRB     r4,[r1],#1
000122  42a3              CMP      r3,r4
000124  d001              BEQ      |L1.298|
;;;167    			return 0;
000126  2000              MOVS     r0,#0
                  |L1.296|
;;;168    		}
;;;169    	}
;;;170    	if (*n1) {
;;;171    		// See if the devtab name is is a substring
;;;172    		if (*(n2 - 1) == '/') {
;;;173    			return 1;
;;;174    		}
;;;175    	}
;;;176    	if (*n1 || *n2) {
;;;177    		return 0;
;;;178    	}
;;;179    	return 1;
;;;180    }
000128  bd10              POP      {r4,pc}
                  |L1.298|
00012a  7810              LDRB     r0,[r2,#0]            ;165
00012c  b110              CBZ      r0,|L1.308|
00012e  7808              LDRB     r0,[r1,#0]            ;165
000130  2800              CMP      r0,#0                 ;165
000132  d1f2              BNE      |L1.282|
                  |L1.308|
000134  7810              LDRB     r0,[r2,#0]            ;170
000136  b128              CBZ      r0,|L1.324|
000138  f8110c01          LDRB     r0,[r1,#-1]           ;172
00013c  282f              CMP      r0,#0x2f              ;172
00013e  d101              BNE      |L1.324|
000140  2001              MOVS     r0,#1                 ;173
000142  e7f1              B        |L1.296|
                  |L1.324|
000144  7810              LDRB     r0,[r2,#0]            ;176
000146  b908              CBNZ     r0,|L1.332|
000148  7808              LDRB     r0,[r1,#0]            ;176
00014a  b108              CBZ      r0,|L1.336|
                  |L1.332|
00014c  2000              MOVS     r0,#0                 ;177
00014e  e7eb              B        |L1.296|
                  |L1.336|
000150  2001              MOVS     r0,#1                 ;179
000152  e7e9              B        |L1.296|
;;;181    
                          ENDP

                  |L1.340|
                          DCD      DevTab

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  UART_Driver
                          DCD      ISP_UART_WRITE
                          DCD      ISP_UART_READ
                  CAN_Driver
                          DCD      CAN_WRITE
                          DCD      CAN_READ
                  SPI_Driver
                          DCD      SPI_WRITE
                          DCD      SPI_READ
                  I2C_Driver
                          DCD      I2C_WRITE
                          DCD      I2C_READ
                  RS485_Driver
                          DCD      RS485_WRITE
                          DCD      RS485_READ

                          AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=2

000000  55415254          DCB      "UART0",0
000004  3000    
000006  00                DCB      0
000007  00                DCB      0
000008  43414e30          DCB      "CAN0",0
00000c  00      
00000d  00                DCB      0
00000e  00                DCB      0
00000f  00                DCB      0
000010  53504930          DCB      "SPI0",0
000014  00      
000015  00                DCB      0
000016  00                DCB      0
000017  00                DCB      0
000018  49324330          DCB      "I2C0",0
00001c  00      
00001d  00                DCB      0
00001e  00                DCB      0
00001f  00                DCB      0
000020  52533438          DCB      "RS4850",0
000024  353000  

                          AREA ||.data||, DATA, ALIGN=2

                  DevTab
                          DCD      ||.conststring||
                          DCD      UART_Driver
                          DCD      UART_Config
                          DCD      ||.conststring||+0x8
                          DCD      CAN_Driver
                          DCD      CAN_Config
                          DCD      ||.conststring||+0x10
                          DCD      SPI_Driver
                          DCD      SPI_Config
                          DCD      ||.conststring||+0x18
                          DCD      I2C_Driver
                          DCD      I2C_Config
                          DCD      ||.conststring||+0x20
                          DCD      RS485_Driver
                          DCD      RS485_Config
